{"version":3,"sources":["Resources/images/alipay-receive-money.jpg","Resources sync /^/.//.*$","Helpers/ArrayHelper.js","icons/crying.svg","icons/user.svg","Game/Resources.js","Game/CultureContext.js","Game/CultureSelector.js","Game/Settings.js","Game/Square.js","Game/Board.js","Game/Modes.js","Game/Strategy.js","Game/Game.js","Game/Judger.js","Game/ComputerFool.js","Game/player-fool.js","Game/AI.js","Game/player-ai.js","Game/Stats.js","Game/Options.js","Game/LearningStatus.js","result/result.js","layout/sidebar.js","money/alipay-red-package.js","money/support-author.js","user/SignedIn.js","layout/layout.js","index.js","Resources/en-US.js","Resources/images/alipay-red-package.png","Resources/zh-CN.js"],"names":["module","exports","__webpack_require__","p","map","./en-US","./en-US.js","./images/alipay-receive-money.jpg","./images/alipay-red-package.png","./zh-CN","./zh-CN.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","__webpack_exports__","convertIndexToRowColumn","rowLength","index","col","row","Math","floor","is2DArray","array","Array","getRowColumnByIndex","this","length","sqrt","findIndexOfMax","max","i","intersects","a1","a2","res","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","e1","value","indexOf","push","err","return","resources","currentCulture","Resources","culture","require","concat","ZhCN","EnUS","ex","setCulture","cultures","zhCN","enUS","getDefault","settings","JSON","parse","localStorage","getItem","language","navigator","CultureContext","React","createContext","changeCulture","console","log","CultureSelector","_this","languages","label","react_default","a","createElement","Game_CultureContext","Consumer","_ref","picker_default","data","onChange","props","cols","list_default","Item","arrow","getInstance","chooseLanguage","Component","spotScoreMap","Map","CheckboxItem","checkbox_default","defaultSettings","GlobalSettings","objectSpread","Settings","state","key","setState","defineProperty","setItem","stringify","_this2","style","textAlign","renderHeader","getCurrentCulture","k","checked","CultureSelector_CultureSelector","href","title","rel","target","Square","className","onClick","get","disabled","highlight","color","Board","squares","winner","where","side","rowIndex","renderSquare","rows","renderBoardRow","display","minWidth","renderBoard","Modes","humanVsComputer","computerVsComputer","boardSides","top","left","right","bottom","center","middle","slash","antiSlash","sides","PlayerX","PlayerO","initialWeights","namedStrategy","factors","const","danger","occupyCenter","StrategySettings","classCallCheck","createClass","iw","func","Strategy","bitmap","_checkSides","d","dead","w","c","_loop","filter","_","j","negatives","b","zeros","ones","lost","chance","win","checkSides","getInitialWeights","intersectedBads","getIntersectedBads","numberOfBadsOfMyChance","getNumberOfBadsOfMyChancePosition","bads","_loop2","_side","slicedToArray","v1","v2","v3","bad1","bad2","ArrayHelper","sum","_loop3","sideValues","theChance","sidesContainsTheChancePosition","s","_loop4","sValues","n","Judger","getBoardScore","weights","_Strategy$getBoardSta","getBoardStatus","namedFactors","getNamedStrategy","total","PI","score","atan","reduce","prev","getSpots","bitmapSquares","NaN","isNaN","generateNewBoardsBySpots","currentBoard","spots","newSquares","slice","gameProgress","emptySpots","fair","v","_ret","gameEnds","progress","Game_ComputerFool","ComputerFool","nextMove","round","random","PlayerFool","me","game","callback","handleClick","latestFactors","AI","assign","setWeightsUpdatedCallback","cb","weightsUpdatedCallback","nextIsMe","tryLearn","learn","lastBitmapSquares","lastSquares","currentSquares","estimatedLastScore","diff","clear","scores","spot","set","strategy","PlayerAI","enemy","expert","convertSquaresToBitmap","nextIndex","xIsNext","getWeights","getFactors","clean","XWin","OWin","Fair","Stats","getTotal","dataSource","draw","subtotal","getXWinPercent","toFixed","getOWinPercent","getFairPercent","columns","dataIndex","wins","table","pagination","GameOptions","possibleConstructorReturn","getPrototypeOf","call","selected","mode","autoStart","GameModes","notifyWorld","self","setTimeout","optionChanged","readonly","selectMode","type","toggleAutoStart","htmlFor","LearningStatus","showLearningStatus","flex_default","wrap","OWeights","join","wordBreak","Result","showRedPackageModal","comfortPlayer","onClose","modal_default","visible","transparent","maskClosable","footer","text","onPress","src","alt","maxWidth","winnerInfo","who","button_default","icon","setInitialWeights","setNamedStrategy","Game","ai","initialSquares","fill","history","squareIndex","stepNumber","currentMode","countDown","bind","assertThisInitialized","changeCountdownNumber","weightsUpdated","notifyGameOverIfEnds","placeAt","autoPlaying","afterStateChangedCallback","step","_this3","selectedMode","_this4","_this5","endsAt","gameOptions","checkAutoStart","jumpTo","newWeights","_this6","updateRoundResult","status","_this7","current","getNextPlayer","progress_default","percent","position","white_space_default","size","LearningStatus_LearningStatus","height","classnames","Board_Board","visibility","result_Result","Game_Stats","autoPlay","startLearning","Options_GameOptions","ref","_this8","move","fullLink","width","SideBar","onClicked","multipleLine","Link","to","homepage","how","thumb","viewBox","version","aria-hidden","fillRule","source","getRedPackage","supportAuthor","AlipayRedPackage","tryToLoadAlipay","window","location","replace","SupportAuthor","userAgentApp","UserAgentApplication","errorDesc","token","error","tokenType","SignedIn","hash","startsWith","acquireTokenSilent","headers","Headers","bearer","append","options","method","fetch","Layout","docked","onDock","url","hostname","BrowserRouter","basename","process","Provider","nav_bar_default","leftContent","icon_default","onLeftClick","rightContent","maxHeight","siteName","drawer_default","minHeight","document","documentElement","clientHeight","contentStyle","sidebarStyle","border","sidebar","sidebar_SideBar","wing_blank_default","Route","path","exact","component","ReactDOM","render","layout_Layout","getElementById","header","subHeader","weightsOf","sourceCode","stats","showAdvancedSettings","getRound","getMove","_ArrayHelper$getRowCo"],"mappings":"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","file":"static/js/main.c4459c04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alipay-receive-money.a983b729.jpg\";","var map = {\n\t\"./en-US\": 48,\n\t\"./en-US.js\": 48,\n\t\"./images/alipay-receive-money.jpg\": 141,\n\t\"./images/alipay-red-package.png\": 61,\n\t\"./zh-CN\": 64,\n\t\"./zh-CN.js\": 64\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 294;","export default {\n    convertIndexToRowColumn(rowLength, index) {\n        return {\n            col: (index % rowLength) + 1,\n            row: Math.floor(index / rowLength) + 1\n        }\n    },\n    is2DArray: function (array) {\n        return array[0] instanceof Array;\n    },\n    getRowColumnByIndex(array, index) {\n        if (this.is2DArray(array)) {\n            return this.convertIndexToRowColumn(array[0].length, index);\n        }\n\n        return this.convertIndexToRowColumn(Math.sqrt(array.length), index);\n    },\n\n    findIndexOfMax(array) {\n        let index = 0;\n        let max = array[0];\n\n        for (let i = 1; i < array.length; i++) {\n            if (array[i] > max) {\n                max = array[i];\n                index = i;\n            }\n        }\n\n        return index;\n    },\n\n    intersects(a1, a2) {\n        const res = [];\n        for (const e1 of a1) {\n            if (a2.indexOf(e1) >= 0) {\n                res.push(e1);\n            }\n        }\n\n        return res;\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/crying.993670b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.9dc154d2.svg\";","import EnUS from \"../Resources/en-US\";\nimport ZhCN from \"../Resources/zh-CN\";\n\nlet resources;\nlet currentCulture;\n\nexport default class Resources {\n    static setCulture(culture) {\n        try {\n            resources = require(`../Resources/${culture}`);\n\n            if (culture === 'zh-CN') {\n                currentCulture = ZhCN;\n            } else {\n                currentCulture = EnUS;\n            }\n\n            return [culture];\n        } catch (ex) {\n            resources = require(`../Resources/zh-CN`);\n            return ['en-US']\n        }\n    }\n\n    static getInstance() {\n        if (!resources) {\n            Resources.setCulture('en-US');\n        }\n\n        return resources;\n    }\n\n    static getCurrentCulture() {\n        return currentCulture || EnUS\n    }\n}\n","import React from \"react\";\nimport Resources from \"./Resources\";\n\nexport const cultures = {\n    zhCN: ['zh-CN'],\n    enUS: ['en-US'],\n    getDefault: () => {\n        let culture = 'en-US';\n\n        let settings = JSON.parse(localStorage.getItem('settings'));\n        if (settings && settings.language !== undefined) {\n            culture = settings.language[0];\n        } else if (navigator && navigator.language && navigator.language === 'zh-CN') {\n            culture = 'zh-CN';\n        } else {\n            culture = 'en-US';\n        }\n\n        if (culture === 'zh-CN') {\n            Resources.setCulture(cultures.zhCN[0]);\n            return cultures.zhCN;\n        }\n\n        Resources.setCulture(cultures.enUS[0])\n        return cultures.enUS\n    }\n}\n\nconst CultureContext = React.createContext({\n    culture: {currentCulture: cultures.getDefault()},\n    changeCulture: (value) => {\n        console.log('change to = ', value);\n    }\n});\nexport default CultureContext;\n","import React from 'react';\nimport Resources from './Resources';\nimport {Picker, List} from \"antd-mobile\";\nimport CultureContext from './CultureContext'\n\nexport default class CultureSelector\n    extends React.Component {\n\n    render() {\n        const languages = [\n            {\n                value: 'zh-CN',\n                label: '中文',\n            },\n            {\n                value: 'en-US',\n                label: 'English',\n            }\n        ]\n\n        return <CultureContext.Consumer>\n            {({culture, changeCulture}) => (\n                <Picker data={languages} onChange={(value) => {\n                    changeCulture(value)\n\n                    typeof this.props.onChange === 'function' && this.props.onChange(value)\n                }} cols={1}\n                        value={culture.currentCulture}>\n                    <List.Item arrow=\"horizontal\">{Resources.getInstance().chooseLanguage}</List.Item>\n                </Picker>\n            )}\n        </CultureContext.Consumer>\n    }\n\n}\n","import React from \"react\";\nimport {Checkbox, List} from \"antd-mobile\";\nimport CultureSelector from \"./CultureSelector\";\nimport Resources from \"./Resources\";\n\nexport const spotScoreMap = new Map();\nconst CheckboxItem = Checkbox.CheckboxItem;\nlet defaultSettings = {\n    // learn: true,\n    // showLearningStatus: false,\n    language: ['en-US']\n};\nexport const GlobalSettings = {\n    ...defaultSettings,\n    ...JSON.parse(localStorage.getItem('settings'))\n};\n\nexport default class Settings extends React.Component {\n    state = {...GlobalSettings}\n\n    onChange = (key) => {\n        GlobalSettings[key] = !GlobalSettings[key];\n        this.setState({\n            [key]: GlobalSettings[key]\n        })\n\n        localStorage.setItem('settings', JSON.stringify(GlobalSettings));\n    }\n\n    render() {\n        return <div style={{textAlign: 'left'}}>\n            <List renderHeader={() => Resources.getCurrentCulture().settings}>\n                {\n                    Object.keys(GlobalSettings).map(k => {\n                        if (typeof defaultSettings[k] === \"boolean\") {\n                            return <CheckboxItem key={k} onChange={() => this.onChange(k)}\n                                                 checked={this.state[k]}>{k}</CheckboxItem>\n                        } else if (k === 'language') {\n                            return <CultureSelector key={k} onChange={(value) => {\n                                GlobalSettings.language = value;\n                                this.setState({\n                                    language: value\n                                })\n                                localStorage.setItem('settings', JSON.stringify(GlobalSettings))\n                            }}/>\n                        } else {\n                            return null;\n                        }\n                    })\n                }\n            </List>\n            <div>\n                <div>Icons made by <a href=\"https://www.freepik.com/\" title=\"Freepik\"\n                                      rel=\"noopener noreferrer\">Freepik</a> from <a\n                    href=\"https://www.flaticon.com/\" title=\"Flaticon\" rel=\"noopener noreferrer\"\n                    target=\"_blank\">www.flaticon.com</a> is licensed by <a\n                    href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\"\n                    rel=\"noopener noreferrer\">CC\n                    3.0 BY</a></div>\n                <div>Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" rel=\"noopener noreferrer\" \t\t\t    title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" \t\t\t    title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">CC 3.0 BY</a></div>\n            </div>\n        </div>\n    }\n}\n","import React from 'react';\nimport {spotScoreMap} from \"./Settings\";\n\nexport default function Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick} title={JSON.stringify(spotScoreMap.get(props.index))}\n                disabled={props.disabled}>\n            {props.highlight ? <strong style={{\"color\": \"red\"}}>{props.value}</strong> : <span>{props.value}</span>}\n        </button>\n    );\n}\n","import React from 'react';\nimport Square from './Square';\nimport './board.css'\n\nexport default class Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} key={i} index={i}\n                       highlight={this.props.winner ? this.props.winner.where.indexOf(i) >= 0 : false}\n                       disabled={this.props.disabled}/>;\n    }\n\n    renderBoardRow(side, rowIndex) {\n        let cols = [];\n        for (let i = 0; i < side; i++) {\n            cols.push(this.renderSquare(rowIndex * side + i));\n        }\n\n        return cols;\n    }\n\n    renderBoard() {\n        let side = Math.sqrt(this.props.squares.length);\n        let rows = [];\n        for (let i = 0; i < side; i++) {\n            rows.push(<div className=\"board-row\" key={i}>\n                {this.renderBoardRow(side, i)}\n            </div>);\n        }\n\n        return rows;\n    }\n\n    render() {\n        return (\n            <div style={{display: 'inline-block', minWidth: '247px'}}>\n                {this.renderBoard()}\n            </div>\n        );\n    }\n}\n","export default {\n    humanVsComputer: 'humanVsComputer',\n    computerVsComputer: 'computerVsComputer'\n};","import ArrayHelper from \"../Helpers/ArrayHelper\";\n\nconst boardSides = {\n    top: [0, 1, 2],\n    left: [0, 3, 6],\n    right: [2, 5, 8],\n    bottom: [6, 7, 8],\n    center: [3, 4, 5],\n    middle: [1, 4, 7],\n    slash: [2, 4, 6],\n    antiSlash: [0, 4, 8]\n};\n\nconst sides = [\n    boardSides.top,\n    boardSides.center,\n    boardSides.bottom,\n    boardSides.left,\n    boardSides.middle,\n    boardSides.right,\n    boardSides.slash,\n    boardSides.antiSlash\n];\n\nfunction checkSides(bitmap) {\n    let d = 0;\n    let dead = 0;\n    let w = 0;\n    let c = 0;\n\n    for (let i = 0; i < sides.length; i++) {\n        let side = bitmap.filter((_, j) => sides[i].indexOf(j) >= 0);\n\n        let negatives = side.filter(b => b === -1);\n        let zeros = side.filter(b => b === 0);\n        let ones = side.filter(b => b === 1);\n\n        if (negatives.length === 2 && zeros.length === 1) {\n            d++;\n        }\n\n        if (negatives.length === 3) {\n            dead++;\n        }\n\n        if (ones.length === 3) {\n            w++;\n        }\n\n        if (ones.length === 2 && zeros.length === 1) {\n            c++;\n        }\n    }\n\n    return {danger: d, lost: dead, chance: c, win: w};\n}\n\nlet initialWeights = [0, 1, 1];\nlet namedStrategy = (factors) => {\n    return {\n        const: factors[0],\n        danger: factors[1],\n        occupyCenter: factors[2],\n    };\n}\n\nexport class StrategySettings {\n    static setInitialWeights(iw) {\n        initialWeights = iw;\n    }\n\n    static setNamedStrategy(func) {\n        namedStrategy = func;\n    }\n}\n\nexport default class Strategy {\n    static getInitialWeights() {\n        return initialWeights;\n    }\n\n    static getNamedStrategy(factors) {\n        return namedStrategy(factors);\n    }\n\n    static getBoardStatus(bitmap) {\n        let {danger, lost, chance, win} = checkSides(bitmap);\n        return {\n            danger, lost, chance, win,\n            factors: Object.keys(namedStrategy(Strategy.getInitialWeights())).map(key => {\n                return {\n                    const: 1,\n                    danger: danger * 1.1,\n                    occupyCenter: bitmap[4] === 1 ? 1 : 0,\n                    intersectedBads: Strategy.getIntersectedBads(bitmap) / 2,\n                    chance: chance,\n                    numberOfBadsOfMyChance: Strategy.getNumberOfBadsOfMyChancePosition(bitmap)\n                }[key];\n            })\n        };\n    }\n\n    static getIntersectedBads(bitmap) {\n        let intersectedBads = 0;\n        const bads = [];\n\n        for (let i = 0; i < sides.length; i++) {\n            let side = bitmap.filter((_, j) => sides[i].indexOf(j) >= 0);\n\n            const [v1, v2, v3] = side;\n\n            if ((v1 === -1 && v2 === 0 && v3 === 0) ||\n                (v1 === 0 && v2 === -1 && v3 === 0) ||\n                (v1 === 0 && v2 === 0 && v3 === -1) ||\n\n                (v1 === -1 && v2 === -1 && v3 === 0) ||\n                (v1 === -1 && v2 === 0 && v3 === -1) ||\n                (v1 === 0 && v2 === -1 && v3 === -1)\n            ) {\n                bads.push(sides[i]);\n            }\n        }\n\n        if (bads.length <= 1) {\n            return 0;\n        }\n\n        for (let i = 0; i < bads.length - 1; i++) {\n            for (let j = i + 1; j < bads.length; j++) {\n                const bad1 = bads[i];\n                const bad2 = bads[j];\n\n                const intersects = ArrayHelper.intersects(bad1, bad2);\n\n                if (intersects.length > 0 && (bitmap[intersects[0]] === 0 || bitmap[intersects[0]] === -1)) {\n                    intersectedBads++;\n                }\n            }\n        }\n\n        return intersectedBads;\n    }\n\n    static getNumberOfBadsOfMyChancePosition(bitmap) {\n        let sum = 0;\n\n        for (let i = 0; i < sides.length; i++) {\n            let sideValues = bitmap.filter((_, j) => sides[i].indexOf(j) >= 0);\n\n            let zeros = sideValues.filter(b => b === 0);\n            let ones = sideValues.filter(b => b === 1);\n\n            if (ones.length === 2 && zeros.length === 1) {\n                const theChance = sides[i].filter(index => bitmap[index] === 0)[0];\n\n                if (theChance !== undefined) {\n                    let sidesContainsTheChancePosition = sides.filter(s => s.indexOf(theChance) >= 0);\n\n                    for (const s of sidesContainsTheChancePosition) {\n                        let sValues = bitmap.filter((_, j) => s.indexOf(j) >= 0);\n\n                        let n = sValues.filter(b => b === -1).length;\n                        let p = sValues.filter(b => b === 1).length;\n\n                        if (n > 0 && p === 0) {\n                            sum++;\n                        }\n                    }\n                }\n            }\n        }\n\n        return sum;\n    }\n}\n","import React from 'react';\nimport Board from './Board';\nimport GameModes from './Modes';\nimport PlayerFool from './player-fool';\nimport ai from './player-ai';\nimport Stats from './Stats';\nimport Judger from \"./Judger\";\nimport Resources from './Resources';\nimport Strategy, {StrategySettings} from \"./Strategy\";\nimport {Button, Flex, Progress, WhiteSpace} from 'antd-mobile'\nimport GameOptions from \"./Options\";\nimport classnames from 'classnames'\nimport './game.css';\nimport LearningStatus from \"./LearningStatus\";\nimport Result from \"../result/result\";\n\nStrategySettings.setInitialWeights([0, -2, -1, 1, 1.5, -1]);\n//-0.01, -0.47, -0.16, 1.46, 0.67, -0.54\nStrategySettings.setNamedStrategy((factors) => {\n    return {\n        const: factors[0],\n        danger: factors[1],\n        intersectedBads: factors[2],\n        chance: factors[3],\n        occupyCenter: factors[4],\n        numberOfBadsOfMyChance: factors[5]\n    };\n})\n\nlet PlayerX, PlayerO\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n\n        PlayerX = new PlayerFool('X');\n        PlayerO = new ai('O', 'X');\n\n        let initialSquares = Array(9).fill(null);\n        this.state = {\n            history: [{\n                squares: initialSquares,\n                squareIndex: null\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n            currentMode: GameModes.humanVsComputer,\n            autoStart: false,\n            OWeights: Object.assign([], PlayerO.getWeights()),\n            strategy: Strategy.getNamedStrategy(Strategy.getBoardStatus(new ai('O', 'X').convertSquaresToBitmap(initialSquares)).factors),\n            winnerInfo: null,\n            round: 1,\n            countDown: 0,\n            disabled: false\n        };\n\n        this.optionChanged = this.optionChanged.bind(this);\n        this.changeCountdownNumber = this.changeCountdownNumber.bind(this);\n    }\n\n    componentDidMount() {\n        PlayerO.setWeightsUpdatedCallback(this.weightsUpdated.bind(this));\n        PlayerX.setWeightsUpdatedCallback(this.weightsUpdated.bind(this));\n\n    }\n\n    changeCountdownNumber(e) {\n        this.setState({\n            countDown: e.target.value\n        })\n    }\n\n    handleClick(i, callback) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (this.notifyGameOverIfEnds(squares)) {\n            this.setState({disabled: true})\n            return;\n        }\n\n        if (squares[i]) {\n            return;\n        }\n\n        this.placeAt(squares, i, history, () => {\n            this.setState({strategy: Strategy.getNamedStrategy(Strategy.getBoardStatus(new ai('O', 'X').convertSquaresToBitmap(this.state.history[this.state.history.length - 1].squares)).factors)})\n\n            if (this.notifyGameOverIfEnds(this.state.history[this.state.stepNumber].squares)) {\n                return;\n            }\n\n            if (!this.state.autoPlaying) {\n                setTimeout(() => {\n                    if (!this.state.xIsNext) {\n                        this.setState({disabled: true})\n                        setTimeout(() => {\n                            PlayerO.nextMove(this.state.history[this.state.stepNumber].squares, this);\n                            this.setState({disabled: false});\n\n                        }, 600);\n                        return;\n                    }\n\n                    if (this.state.xIsNext && (this.state.currentMode === GameModes.computerVsComputer)) {\n                        PlayerX.nextMove(this.state.history[this.state.stepNumber].squares, this);\n                    }\n                }, 10);\n            }\n\n            typeof callback === 'function' && callback();\n        });\n\n    }\n\n    notifyGameOverIfEnds(squares) {\n        let progress = Judger.gameProgress(PlayerO.convertSquaresToBitmap(squares));\n\n        if (Judger.gameEnds(progress)) {\n            this.gameEnds({\n                who: progress.lost ? 'X' : (progress.win ? 'O' : null),\n                where: progress.lost || progress.win || []\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    placeAt(squares, i, history, afterStateChangedCallback) {\n        if (squares[i]) {\n            return;\n        }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n                squareIndex: i\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        }, afterStateChangedCallback);\n    }\n\n    jumpTo(step, callback) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n            winnerInfo: step === 0 ? null : this.state.winnerInfo,\n            disabled: step === 0 ? false : this.state.disabled\n        }, () => {\n            this.autoStart(this.state.currentMode, this.state.autoStart);\n\n            typeof callback === 'function' && callback();\n        });\n    }\n\n    optionChanged(selectedMode, autoStart) {\n        this.setState({\n            currentMode: selectedMode,\n            autoStart: autoStart\n        }, () => {\n            this.autoStart(selectedMode, autoStart);\n        });\n    }\n\n    autoStart(selectedMode, autoStart) {\n        if (selectedMode === GameModes.computerVsComputer && autoStart && this.state.stepNumber === 0) {\n            this.setState({endsAt: undefined}, () => {\n                PlayerX.nextMove(this.state.history[this.state.stepNumber].squares, this);\n            });\n        }\n    }\n\n    learn() {\n        this.setState({\n            countDown: this.state.countDown - 1\n        });\n\n        this.gameOptions.checkAutoStart(true);\n        this.gameOptions.selectMode('computerVsComputer');\n\n        if (this.state.stepNumber > 0) {\n            this.jumpTo(0);\n        }\n    }\n\n    weightsUpdated(newWeights) {\n        this.setState({\n            OWeights: Object.assign([], PlayerO.getWeights()),\n        });\n    }\n\n    gameEnds(winnerInfo) {\n        PlayerO.tryLearn(this.state.history[this.state.stepNumber].squares);\n        PlayerO.clean();\n        Stats.updateRoundResult(winnerInfo ? winnerInfo.who : null);\n\n        this.setState(\n            {\n                winnerInfo: winnerInfo,\n                round: this.state.round + 1,\n                endsAt: this.state.stepNumber,\n            }, () => {\n                if (this.state.countDown > 0) {\n                    this.setState({\n                        countDown: this.state.countDown - 1\n                    }, () => {\n                        this.jumpTo(0);\n                    });\n                } else {\n                    this.setState({autoPlaying: false})\n                }\n            }\n        );\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.state.winnerInfo ? this.state.winnerInfo.who : null;\n\n        let status;\n        if (winner) {\n            status = Resources.getInstance().winner + winner;\n        } else {\n            if (!this.state.winnerInfo) {\n                status = Resources.getInstance().getNextPlayer(this.state.xIsNext, this.state.stepNumber);\n            } else {\n                status = '和棋！'\n            }\n        }\n\n        return (\n            <div className=\"flex-container\" style={{minWidth: '300px'}}>\n                {\n                    this.state.stepNumber > 0 &&\n\n                    <Progress percent={this.state.disabled ? 0 : 100} position=\"fixed\"/>\n                }\n                <WhiteSpace size=\"lg\"/>\n                <LearningStatus state={this.state}/>\n                <WhiteSpace size=\"lg\"/>\n\n                <Flex>\n                    <Flex.Item style={{textAlign: 'center'}}>\n                        <div style={{height: '50px'}} className={classnames({\n                            'win': this.state.winnerInfo,\n                            'progress': !this.state.winnerInfo\n                        })}>{status}</div>\n                    </Flex.Item>\n                </Flex>\n                <WhiteSpace size=\"lg\"/>\n                <WhiteSpace size=\"lg\"/>\n                <Flex>\n                    <Flex.Item style={{textAlign: 'center'}}>\n                        <Board squares={current.squares} disabled={this.state.disabled}\n                               onClick={(i) => this.state.currentMode === GameModes.computerVsComputer ? false : this.handleClick(i)}\n                               winner={this.state.winnerInfo}/>\n\n                    </Flex.Item>\n                </Flex>\n                <WhiteSpace size=\"lg\"/>\n                <Flex>\n                    <Flex.Item>\n                        <Button style={{visibility: this.state.winnerInfo !== null ? 'visible' : 'hidden'}}\n                                icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\"\n                                           alt=\"\"/>} onClick={() => this.jumpTo(0)}>再来一局！</Button>\n                    </Flex.Item>\n                </Flex>\n                <WhiteSpace size=\"lg\"/>\n                <Result winnerInfo={this.state.winnerInfo || {}}/>\n                <WhiteSpace size=\"lg\"/>\n                <WhiteSpace size=\"lg\"/>\n                <WhiteSpace size=\"lg\"/>\n                <WhiteSpace size=\"lg\"/>\n                <Flex>\n                    <Flex.Item style={{textAlign: 'center'}}>\n                        <Stats round={this.state.round}/>\n                    </Flex.Item>\n                </Flex>\n                <WhiteSpace size=\"lg\"/>\n                <Flex style={{display: 'none'}}>\n                    <Flex.Item>\n                        <p>\n                            {Resources.getInstance().autoPlay} <input type=\"number\"\n                                                                      onChange={this.changeCountdownNumber}\n                                                                      id=\"turns\"\n                                                                      value={this.state.countDown}/> {Resources.getInstance().round}\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <button id=\"start-auto-button\"\n                                    onClick={() => this.learn()}>{Resources.getInstance().startLearning}</button>\n                        </p>\n                    </Flex.Item>\n                    <Flex.Item>\n                        <GameOptions readonly={this.state.stepNumber}\n                                     optionChanged={this.optionChanged} autoStart={this.state.autoStart}\n                                     mode={this.state.currentMode}\n                                     ref={gameOptions => this.gameOptions = gameOptions}/>\n                    </Flex.Item>\n                </Flex>\n            </div>\n        );\n    }\n\n    move(squares, callback) {\n        if (this.state.xIsNext) {\n            return PlayerX.nextMove(squares, this, callback);\n        }\n\n        return PlayerO.nextMove(squares, this, callback);\n    }\n\n    autoPlay() {\n        this.setState({\n            autoPlaying: true\n        }, () => {\n            let squares = this.state.history[this.state.stepNumber].squares;\n\n            let progress = Judger.gameProgress(PlayerO.convertSquaresToBitmap(squares));\n            if (!Judger.gameEnds(progress)) {\n                this.move(squares, this.autoPlay.bind(this));\n            } else {\n                this.gameEnds({\n                    who: progress.win ? 'O' : (progress.lost ? 'X' : null),\n                    where: progress.win || progress.lost || []\n                });\n\n                this.setState({\n                    autoPlaying: false\n                });\n            }\n        });\n    }\n}\n","import Strategy from \"./Strategy\";\n\nconst boardSides = {\n    top: [0, 1, 2],\n    left: [0, 3, 6],\n    right: [2, 5, 8],\n    bottom: [6, 7, 8],\n    center: [3, 4, 5],\n    middle: [1, 4, 7],\n    slash: [2, 4, 6],\n    antiSlash: [0, 4, 8]\n};\n\nconst sides = [\n    boardSides.top,\n    boardSides.center,\n    boardSides.bottom,\n    boardSides.left,\n    boardSides.middle,\n    boardSides.right,\n    boardSides.slash,\n    boardSides.antiSlash\n];\nexport default {\n    getBoardScore: function (bitmap, weights) {\n        weights = weights || Strategy.getInitialWeights();\n\n        let {lost, win, factors} = Strategy.getBoardStatus(bitmap);\n\n        if (lost) {\n            return {\n                factors: factors,\n                namedFactors: Strategy.getNamedStrategy(factors),\n                total: -Math.PI / 2\n            }\n        }\n\n        if (win) {\n            return {\n                factors: factors,\n                namedFactors: Strategy.getNamedStrategy(factors),\n                total: Math.PI / 2\n            }\n        }\n\n        let score = Math.atan(factors.map((s, i) => s * weights[i]).reduce((prev, next) => prev + next, 0));\n\n        return {\n            factors: factors,\n            namedFactors: Strategy.getNamedStrategy(factors),\n            total: score\n        };\n    },\n\n    getSpots(bitmapSquares) {\n        return bitmapSquares.map((s, i) => {\n            if (s === 0) {\n                return i;\n            }\n\n            return NaN;\n        }).filter(s => !isNaN(s));\n    },\n\n    generateNewBoardsBySpots(currentBoard, spots) {\n        spots = spots || this.getSpots(currentBoard);\n\n        return spots.map(i => {\n            let newSquares = currentBoard.slice();\n            newSquares[i] = 1;\n\n            return newSquares;\n        });\n    },\n\n    gameProgress(bitmapSquares) {\n        let emptySpots = bitmapSquares.filter(b => b === 0);\n\n        if (emptySpots.length === bitmapSquares.length) {\n            return {\n                win: false,\n                lost: false,\n                fair: false\n            }\n        }\n\n        for (let i = 0; i < sides.length; i++) {\n            let side = bitmapSquares.filter((_, j) => sides[i].indexOf(j) >= 0);\n\n            let ones = side.filter(b => b === 1);\n            let negatives = side.filter(b => b === -1);\n\n            if (ones.length === 3) {\n                return {\n                    win: sides[i],\n                    lost: false,\n                    fair: false\n                };\n            }\n\n            if (negatives.length === 3) {\n                return {\n                    win: false,\n                    lost: sides[i],\n                    fair: false\n                };\n            }\n        }\n\n        return {\n            win: false,\n            lost: false,\n            fair: emptySpots.length === 0\n        }\n    },\n\n    gameEnds(progress) {\n        return progress.fair || progress.win || progress.lost;\n    }\n}\n","import Judger from \"./Judger\";\n\nconst weights = [0, 1, 1, 1, 1, 1, 1, 1, 1];\n\nexport class ComputerFool {\n    constructor() {\n        this.weights = weights;\n    }\n\n    static nextMove(squares, weights) {\n        let spots = Judger.getSpots(squares);\n\n        return spots[Math.round((spots.length - 1) * Math.random())];\n    }\n\n    nextMove(squares) {\n        return ComputerFool.nextMove(squares, this.weights);\n    }\n}\n\nexport default new ComputerFool();","import ComputerFool from \"./ComputerFool\";\n\nexport default class PlayerFool {\n    constructor(me) {\n        this.me = me;\n    }\n\n    nextMove(squares, game, callback) {\n        let bitmap = squares.map(s => {\n            if (s === 'X') {\n                return 1;\n            }\n\n            if (s === 'O') {\n                return -1;\n            }\n\n            return 0;\n        });\n\n        game.handleClick(ComputerFool.nextMove(bitmap), callback);\n    }\n\n    getWeights() {\n        return [];\n    }\n\n    getLearningEnabled() {\n        return false;\n    }\n\n\n    setWeightsUpdatedCallback() {\n    }\n\n    clean() {\n    }\n}","import Judger from \"./Judger\";\nimport ArrayHelper from \"../Helpers/ArrayHelper\";\nimport Strategy from \"./Strategy\";\nimport {GlobalSettings, spotScoreMap} from \"./Settings\";\n\nlet latestFactors = null;\nexport default class AI {\n    constructor() {\n        this.weights = Object.assign([], Strategy.getInitialWeights());\n        this.setWeightsUpdatedCallback(function () {\n        });\n    }\n\n    static nextMove(squares, weights, nextIsMe) {\n        spotScoreMap.clear();\n        let spots = Judger.getSpots(squares);\n        let nextBoards = Judger.generateNewBoardsBySpots(squares, spots);\n        let scores = nextBoards.map(b => Judger.getBoardScore(b, weights).total);\n\n        for (let i = 0; i < spots.length; i++) {\n            const spot = spots[i];\n            const score = scores[i];\n\n            spotScoreMap.set(spot, {\n                weights: weights,\n                strategy: Strategy.getBoardStatus(squares).factors,\n                score: score,\n            });\n        }\n\n        let index = ArrayHelper.findIndexOfMax(scores);\n        latestFactors = scores[index].namedFactors;\n\n        return spots[index];\n    }\n\n    setWeightsUpdatedCallback(cb) {\n        this.weightsUpdatedCallback = cb;\n    }\n\n    nextMove(squares, nextIsMe) {\n        this.tryLearn(squares);\n        return AI.nextMove(squares, this.weights, nextIsMe);\n    }\n\n    tryLearn(squares) {\n        this.learn(this.lastBitmapSquares, squares);\n        this.lastBitmapSquares = squares;\n    }\n\n    clean() {\n        latestFactors = null;\n    }\n\n    getWeights() {\n        return this.weights;\n    }\n\n    getFactors() {\n        return latestFactors;\n    }\n\n    setWeights(weights) {\n        this.weights = weights;\n    }\n\n    learn(lastSquares, currentSquares) {\n        if (!lastSquares) {\n            return;\n        }\n\n        if (!GlobalSettings.learn) {\n            return;\n        }\n\n        let estimatedLastScore = Judger.getBoardScore(lastSquares, this.weights);\n        let actualScore = Judger.getBoardScore(currentSquares, this.weights);\n        let diff = actualScore.total - estimatedLastScore.total;\n\n        for (let i = 0; i < estimatedLastScore.factors.length; i++) {\n            this.weights[i] = this.weights[i] + 0.1 * diff * estimatedLastScore.factors[i];\n        }\n\n        this.weightsUpdatedCallback(this.weights);\n    }\n}\n","import AI from \"./AI\";\n\nexport default class PlayerAI {\n    constructor(me, enemy) {\n        this.me = me;\n        this.enemy = enemy;\n        this.expert = new AI();\n    }\n\n    nextMove(squares, game, callback) {\n        let bitmap = this.convertSquaresToBitmap(squares);\n\n        let nextIndex = this.expert.nextMove(bitmap, !game.state.xIsNext);\n        game.handleClick(nextIndex, callback);\n    }\n\n    convertSquaresToBitmap(squares) {\n        return squares.map(s => {\n            if (s === this.enemy) {\n                return -1;\n            }\n\n            if (s === this.me) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n\n    getWeights() {\n        return this.expert.getWeights();\n    }\n\n    getFactors() {\n        return this.expert.getFactors();\n    }\n\n    setWeightsUpdatedCallback(cb) {\n        this.expert.setWeightsUpdatedCallback(cb);\n    }\n\n    tryLearn(squares) {\n        this.expert.tryLearn(this.convertSquaresToBitmap(squares));\n    }\n\n    clean() {\n        this.expert.clean();\n    }\n}\n","import React from 'react';\nimport Resources from \"./Resources\";\nimport {Table} from \"antd\";\nimport './stats.css'\n\nlet state = {\n    XWin: 0,\n    OWin: 0,\n    Fair: 0\n};\n\nclass Stats extends React.Component {\n\n    static updateRoundResult(winner) {\n        if (winner === 'X') {\n            state.XWin = state.XWin + 1\n            return;\n        }\n\n        if (winner === 'O') {\n            state.OWin = state.OWin + 1\n            return;\n        }\n\n        state.Fair = state.Fair + 1\n    }\n\n    getTotal() {\n        return state.XWin + state.OWin + state.Fair;\n    }\n\n    getXWinPercent() {\n        if (this.getTotal() === 0) {\n            return 0;\n        }\n        return (state.XWin) / this.getTotal();\n    }\n\n    getOWinPercent() {\n        if (this.getTotal() === 0) {\n            return 0;\n        }\n        return (state.OWin) / this.getTotal();\n    }\n\n    getFairPercent() {\n        if (this.getTotal() === 0) {\n            return 0;\n        }\n        return (state.Fair) / this.getTotal();\n    }\n\n    render() {\n        const dataSource = [{\n            key: '#',\n            XWin: state.XWin,\n            OWin: state.OWin,\n            draw: state.Fair,\n            subtotal: this.getTotal()\n        }, {\n            key: '%',\n            XWin: this.getXWinPercent().toFixed(2) * 100 + '%',\n            OWin: this.getOWinPercent().toFixed(2) * 100 + '%',\n            draw: this.getFairPercent().toFixed(2) * 100 + '%',\n            subtotal: '100%'\n        }];\n        const columns = [{\n            title: this.props.round,\n            dataIndex: 'key',\n            key: 'key',\n        }, {\n            title: <div>你 (X) <br/>{Resources.getInstance().wins}</div>,\n            dataIndex: 'XWin',\n            key: 'XWin',\n        }, {\n            title: <div>电脑 (O) <br/>{Resources.getInstance().wins}</div>,\n            dataIndex: 'OWin',\n            key: 'OWin',\n        }, {\n            title: Resources.getInstance().fair,\n            dataIndex: 'draw',\n            key: 'draw'\n        }, {\n            title: Resources.getInstance().total,\n            dataIndex: 'subtotal',\n            key: 'subtotal'\n        }];\n        return <Table dataSource={dataSource} columns={columns} pagination={false}/>;\n    }\n}\n\nexport default Stats;","import React from 'react';\nimport GameModes from './Modes';\nimport Resources from './Resources';\n\nexport default class GameOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            selected: props.mode,\n            autoStart: props.autoStart\n        };\n    }\n\n    selectMode(mode) {\n        this.setState({\n            selected: GameModes[mode]\n        });\n        this.notifyWorld();\n    }\n\n    checkAutoStart() {\n        this.setState({autoStart: true});\n        this.notifyWorld();\n    }\n\n    notifyWorld() {\n        let self = this;\n        setTimeout(() => {\n            self.props.optionChanged(self.state.selected, self.state.autoStart);\n        });\n    }\n\n    toggleAutoStart() {\n        this.setState({autoStart: !this.state.autoStart})\n        this.notifyWorld();\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    Object.keys(GameModes).map(mode =>\n                        <p key={mode}>\n                            <button disabled={this.props.readonly}\n                                    onClick={() => this.selectMode(mode)}>\n                                {this.state.selected === GameModes[mode] ?\n                                    <strong>{Resources.getInstance()[GameModes[mode]]}</strong> :\n                                    <span>{Resources.getInstance()[GameModes[mode]]}</span>}\n                            </button>\n                        </p>\n                    )\n                }\n                <p>\n                    <input id=\"auto-start\" type=\"checkbox\" onChange={() => this.toggleAutoStart()}\n                           checked={this.state.autoStart}/>\n                    <label htmlFor=\"auto-start\">{Resources.getInstance().autoStart}</label>\n                </p>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {GlobalSettings} from \"./Settings\";\nimport {Flex} from \"antd-mobile\";\n\nexport default class LearningStatus extends React.Component {\n    render() {\n        return GlobalSettings.showLearningStatus ? <Flex wrap=\"wrap\">\n            <div>{this.props.state.OWeights.map(w => w.toFixed(2)).join(', ')}</div>\n            <div style={{wordBreak: 'break-word'}}>{JSON.stringify(this.props.state.strategy)}</div>\n        </Flex> : null\n    }\n}\n","import {Button, Flex, Modal} from \"antd-mobile\";\nimport React from \"react\";\nimport './result.css';\n\nexport default class Result extends React.Component {\n    state = {showRedPackageModal: false}\n    comfortPlayer = () => {\n        this.setState({\n            showRedPackageModal: true\n        })\n    }\n\n    onClose = () => {\n        this.setState({\n            showRedPackageModal: false\n        })\n    }\n\n    render() {\n        return <div>\n\n            <Modal\n                visible={this.state.showRedPackageModal}\n                transparent\n                maskClosable={false}\n                title=\"拿红包来拯救你\"\n                footer={[{\n                    text: '领过了，开心多啦！', onPress: () => {\n                        this.onClose();\n                    }\n                }]}\n            >\n                <img src={require('../Resources/images/alipay-red-package.png')} alt=\"支付宝红包\"\n                     style={{maxWidth: '100%'}}/>\n            </Modal>\n\n            {\n                this.props.winnerInfo.who === 'X' &&\n                <Flex>\n                    <Flex.Item>\n                        <Button>竟然赢了，不可思议！</Button>\n                    </Flex.Item>\n                </Flex>\n            }\n            {\n                this.props.winnerInfo.who === 'O' &&\n                <Flex>\n                    <Flex.Item>\n                        <Button icon={<img src={require('../icons/crying.svg')} alt=\"\"/>}\n                                onClick={this.comfortPlayer}>输掉了，不开心。</Button>\n                    </Flex.Item>\n                </Flex>\n            }\n        </div>\n    }\n}\n","import { List } from \"antd-mobile\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Resources from \"../Game/Resources\";\n\nlet fullLink = { width: \"100%\", display: \"inline-block\" };\nexport const SideBar = ({ onClicked }) => (\n  <List>\n    <List.Item key=\"0\" multipleLine>\n      <Link to=\"/\" onClick={onClicked} style={fullLink}>\n        {Resources.getCurrentCulture().homepage}\n      </Link>\n    </List.Item>\n    <List.Item key=\"1\" multipleLine>\n      <Link to=\"/settings\" onClick={onClicked} style={fullLink}>\n        {Resources.getCurrentCulture().settings}\n      </Link>\n    </List.Item>\n    <List.Item key=\"7\" multipleLine>\n      <a\n        href=\"https://view.officeapps.live.com/op/view.aspx?src=https%3A%2F%2Ftictactoe.js.org%2F%E5%B0%86%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8%E4%BA%8E%E6%A3%8B%E7%B1%BB%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E8%88%AC%E6%AD%A5%E9%AA%A4.docx\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {Resources.getCurrentCulture().how}\n      </a>\n    </List.Item>\n    <List.Item\n      key=\"2\"\n      thumb={\n        <svg\n          height=\"32\"\n          className=\"octicon octicon-mark-github\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          width=\"32\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n          />\n        </svg>\n      }\n      multipleLine\n    >\n      <a\n        onClick={onClicked}\n        href=\"https://github.com/Jeff-Tian/tic-tac-toe-ai\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        style={fullLink}\n      >\n        {Resources.getCurrentCulture().source}\n      </a>\n    </List.Item>\n    <List.Item key=\"6\" thumb={\"https://id3.js.org/favicon.ico\"} multipleLine>\n      <a\n        onClick={onClicked}\n        href=\"https://id3.js.org\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        id3\n      </a>\n    </List.Item>\n    <List.Item\n      key=\"3\"\n      thumb={\"https://gitmoji.js.org/static/favicon-32x32.png\"}\n      multipleLine\n    >\n      <a\n        onClick={onClicked}\n        href=\"https://gitmoji.js.org\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        gitmoji\n      </a>\n    </List.Item>\n    <List.Item\n      key=\"4\"\n      thumb={require(\"../Resources/images/alipay-red-package.png\")}\n    >\n      <Link to=\"/alipay-red-package\" onClick={onClicked} style={fullLink}>\n        {Resources.getCurrentCulture().getRedPackage}\n      </Link>\n    </List.Item>\n    <List.Item\n      key=\"5\"\n      thumb={require(\"../Resources/images/alipay-red-package.png\")}\n    >\n      <Link to=\"/support-author\" onClick={onClicked} style={fullLink}>\n        {Resources.getCurrentCulture().supportAuthor}\n      </Link>\n    </List.Item>\n  </List>\n);\n","import React from \"react\";\nimport {WhiteSpace} from \"antd-mobile\";\n\nexport default class AlipayRedPackage extends React.Component {\n    render() {\n        return <div onClick={AlipayRedPackage.tryToLoadAlipay}>\n            <WhiteSpace size=\"lg\"/>\n            <img src={require('../Resources/images/alipay-red-package.png')} alt=\"支付宝红包\"\n                 style={{maxWidth: '100%'}}/>\n        </div>\n    }\n\n    static tryToLoadAlipay() {\n        window.location.replace('alipayqr://platformapi/startapp?saId=10000007&qrcode=https%3A%2F%2Fjeff-tian.github.io%2Ftic-tac-toe-ai%2Fstatic%2Fmedia%2Falipay-red-package.5cd76bdb.png')\n    }\n}\n","import React from \"react\";\nimport {WhiteSpace} from \"antd-mobile\";\n\nexport default class SupportAuthor extends React.Component {\n    render() {\n        return <div onClick={SupportAuthor.tryToLoadAlipay}>\n            <WhiteSpace size=\"lg\"/>\n            <img src={require('../Resources/images/alipay-receive-money.jpg')} alt=\"支付宝付款\"\n                 style={{maxWidth: '100%'}}/>\n        </div>\n    }\n\n    static tryToLoadAlipay() {\n        window.location.replace('alipayqr://platformapi/startapp?saId=10000007&qrcode=https%3A%2F%2Fraw.githubusercontent.com%2FJeff-Tian%2Ftic-tac-toe-ai%2Fmaster%2Fpublic%2Fimages%2Falipay-receive-money.jpg')\n    }\n}\n","import React from \"react\";\nimport { UserAgentApplication } from \"msal\";\n\nconst applicationConfig = {\n  clientID: \"bacb8d3b-6ee0-4443-9bea-b54485a5a20d\"\n};\n\nfunction tokenReceivedCallback(errorDesc, token, error, tokenType) {\n  if (token) {\n    console.log(\"token = \", token);\n  } else {\n    console.error(error + \": \" + errorDesc);\n  }\n}\n\nconst userAgentApp = new UserAgentApplication(\n  applicationConfig.clientID,\n  null,\n  tokenReceivedCallback\n);\n\nexport default class SignedIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n\n    if (hash.startsWith(\"#id_token=\")) {\n      window.localStorage.setItem(\"token\", hash.replace(\"#id_token=\", \"\"));\n    }\n  }\n\n  async componentDidMount() {\n    const token = window.localStorage.getItem(\"token\");\n\n    const res = await userAgentApp.acquireTokenSilent([\n      \"user.read\",\n      \"mail.send\"\n    ]);\n\n    console.log(\"res = \", res);\n\n    if (token) {\n      const headers = new Headers();\n      const bearer = \"Bearer \" + token;\n      headers.append(\"Authorization\", bearer);\n\n      const options = {\n        method: \"GET\",\n        headers\n      };\n\n      const graphEndpoint = \"https://graph.microsoft.com/v1.0/me\";\n\n      const res = await fetch(graphEndpoint, options);\n      console.log(await res.text());\n    }\n  }\n\n  render() {\n    return <div>Hello</div>;\n  }\n}\n","import { Drawer, Icon, NavBar, WingBlank } from \"antd-mobile\";\nimport Game from \"../Game/Game\";\nimport React from \"react\";\nimport { SideBar } from \"./sidebar\";\nimport \"./layout.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Settings from \"../Game/Settings\";\nimport AlipayRedPackage from \"../money/alipay-red-package\";\nimport SupportAuthor from \"../money/support-author\";\nimport Resources from \"../Game/Resources\";\nimport CultureContext, { cultures } from \"../Game/CultureContext\";\nimport SignedIn from \"../user/SignedIn\";\n\nexport default class Layout extends React.Component {\n  changeCulture = value => {\n    this.setState({\n      culture: { currentCulture: Resources.setCulture(value[0]) }\n    });\n    console.log(value);\n  };\n\n  state = {\n    docked: false,\n    culture: { currentCulture: cultures.getDefault() },\n    changeCulture: this.changeCulture\n  };\n\n  onDock = d => {\n    this.setState({\n      [d]: !this.state[d]\n    });\n  };\n\n  render() {\n    const url =\n      window.location.hostname === \"localhost\"\n        ? \"https://unihearti.b2clogin.com/unihearti.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_tictactoe&client_id=bacb8d3b-6ee0-4443-9bea-b54485a5a20d&nonce=defaultNonce&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fidentified&scope=openid&response_type=id_token&prompt=login\"\n        : \"https://unihearti.b2clogin.com/unihearti.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_tictactoe&client_id=bacb8d3b-6ee0-4443-9bea-b54485a5a20d&nonce=defaultNonce&redirect_uri=https%3A%2F%2Ftictactoe.js.org%2Fidentified&scope=openid&response_type=id_token&prompt=login\";\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <CultureContext.Provider value={this.state}>\n          <div>\n            <NavBar\n              leftContent={[<Icon key=\"1\" type=\"ellipsis\" />]}\n              onLeftClick={() => this.onDock(\"docked\")}\n              rightContent={[\n                <a\n                  href={url}\n                  key=\"1\"\n                  style={{ width: \"22px\", height: \"22px\" }}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    src={require(\"../icons/user.svg\")}\n                    alt=\"\"\n                    style={{ maxHeight: \"22px\" }}\n                  />\n                </a>\n              ]}\n            >\n              {Resources.getCurrentCulture().siteName}\n            </NavBar>\n            <Drawer\n              className=\"my-drawer\"\n              style={{ minHeight: document.documentElement.clientHeight - 45 }}\n              contentStyle={{ textAlign: \"center\" }}\n              sidebarStyle={{ border: \"1px solid #ddd\" }}\n              sidebar={<SideBar onClicked={() => this.onDock(\"docked\")} />}\n              docked={this.state.docked}\n            >\n              <WingBlank>\n                <Route path=\"/\" exact component={Game} />\n                <Route path=\"/settings\" component={Settings} />\n                <Route\n                  path=\"/alipay-red-package\"\n                  component={AlipayRedPackage}\n                />\n                <Route path=\"/support-author\" component={SupportAuthor} />\n                <Route path=\"/identified\" component={SignedIn} />\n              </WingBlank>\n            </Drawer>\n          </div>\n        </CultureContext.Provider>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from \"./layout/layout\";\n\nReactDOM.render(\n    <Layout />,\n    document.getElementById('root')\n);\n","import ArrayHelper from '../Helpers/ArrayHelper'\n\nexport const header = 'AI version of tic-tac-toe'\nexport const subHeader = 'Alpha Go of tic-tac-toe'\nexport const winner = 'Winner is: '\nexport const weightsOf = '\\'s Weights: '\nexport const autoPlay = 'Auto play '\nexport const round = 'round'\nexport const startLearning = 'Start learning'\nexport const sourceCode = 'Source code: '\nexport const autoStart = 'Auto start (computer-vs-computer mode only)'\n\nexport const humanVsComputer = 'Human vs Computer'\nexport const computerVsComputer = 'Computer vs Computer'\n\nexport const stats = 'Statistics:'\nexport const wins = 'Wins'\nexport const fair = 'Draw'\nexport const total = 'Total'\nexport const showAdvancedSettings = 'Show Advanced Settings'\n\nexport const siteName = 'AI tic tac toe'\nexport const chooseLanguage = 'Choose language'\n\nexport function getRound(round) {\n  if (round === 1) {\n    return `${round}st Round`\n  }\n\n  if (round === 2) {\n    return `${round}nd Round`\n  }\n\n  if (round === 3) {\n    return `${round}rd Round`\n  }\n\n  return `${round}th Round`\n}\n\nexport function getNextPlayer(xIsNext, step) {\n  if (step <= 0) {\n    return 'Your turn.'\n  }\n  return 'It\\'s ' + (xIsNext ? 'X' : 'Computer O') + '\\'s turn.'\n}\n\nexport function getMove(move, squares, squareIndex) {\n  if (move) {\n    let { col, row } = ArrayHelper.getRowColumnByIndex(squares, squareIndex)\n\n    return '#' + move + ` step @ (${col}, ${row})`\n  }\n\n  return 'Restart'\n}\n\nexport default class EnUS {\n  static siteName = siteName\n  static settings = 'Settings'\n  static homepage = 'Play'\n  static source = 'Source Code'\n  static getRedPackage = 'Red Package!'\n  static supportAuthor = 'Support Author'\n  static how = 'How'\n}\n","module.exports = __webpack_public_path__ + \"static/media/alipay-red-package.5cd76bdb.png\";","import ArrayHelper from '../Helpers/ArrayHelper'\nimport EnUS from './en-US'\n\nexport const header = '人工智能版三子棋'\nexport const subHeader = '三子棋里的阿尔法狗'\nexport const winner = '胜利者：'\nexport const weightsOf = ' 的权重：'\nexport const autoPlay = '自动学习'\nexport const round = '回合'\nexport const startLearning = '开始学习'\nexport const sourceCode = '源代码：'\nexport const autoStart = '自动运行（机-机对战模式）'\n\nexport const humanVsComputer = '人-机对战'\nexport const computerVsComputer = '机-机对战'\n\nexport const stats = '统计:'\nexport const wins = '胜出'\nexport const fair = '平局'\nexport const total = '总计'\n\nexport const showAdvancedSettings = '显示高级设置'\n\nexport const siteName = 'AI 三子棋'\nexport const chooseLanguage = '选择语言'\n\nexport function getRound(round) {\n  return `第 ${round} 回合`\n}\n\nexport function getNextPlayer(xIsNext, step) {\n  if (step <= 0) {\n    return '你（X）先走'\n  }\n  return '轮到：' + (xIsNext ? '你（X）' : '电脑（O）') + ' 了'\n}\n\nexport function getMove(move, squares, squareIndex) {\n  if (move) {\n    let { col, row } = ArrayHelper.getRowColumnByIndex(squares, squareIndex)\n\n    return '第 #' + move + ` 步 @ (${col}, ${row})`\n  }\n\n  return '重新开始'\n}\n\nexport default class ZhCN extends EnUS {\n  static siteName = siteName\n  static settings = '设置'\n  static homepage = '主页'\n  static source = '源代码'\n  static getRedPackage = '领红包！'\n  static supportAuthor = '打赏作者'\n  static how = '原理'\n}\n"],"sourceRoot":""}